---
const GHL_CONTACT_FORM_WEBHOOK_URL =
  "https://services.leadconnectorhq.com/hooks/Tg7heLI3UCqo8uRITWhZ/webhook-trigger/b1071ba8-b834-4c1d-a84d-cc280f819c15";

const { data, options } = Astro.props;
---

<section
  id="experience-aviation-form"
  class="bg-primary-500/20 flex justify-center align-middle items-center py-24"
>
  <div>
    <div class="max-w-4xl text-center">
      <p class="text-base font-semibold leading-7 text-accent-400 uppercase">
        {data.upperHeading}
      </p>
      <h1
        class="mt-0 text-3xl font-bold tracking-tight text-muted-700 sm:text-4xl"
      >
        {data.heading}
      </h1>
      <p
        class="mt-6 text-xl leading-8 text-muted-700"
        set:html={data.description}
      />
    </div>
    <form class="w-full flex flex-col justify-center mx-auto mt-12 max-w-2xl">
      <div class="bg-muted-300 rounded-md p-6">
        <h4 class="text-center font-semibold text-2xl mb-6">
          Attendee Information
        </h4>
        <div class="mb-4">
          <label for="attendee-first-name" class="block mb-0 font-semibold">
            Attendee First Name
          </label>
          <input
            type="text"
            id="attendee-first-name"
            name="attendee-first-name"
            autocomplete="given-name"
            class="w-full h-9 p-2 border bg-gray-100 border-gray-400 rounded-sm focus:outline focus:outline-primary-600/50 focus:ring focus:ring-primary-600/50 focus:border-primary-600/50"
            required
          />
        </div>
        <div class="mb-4">
          <label for="attendee-last-name" class="block mb-0 font-semibold">
            Attendee Last Name
          </label>
          <input
            type="text"
            id="attendee-last-name"
            name="attendee-last-name"
            autocomplete="family-name"
            class="w-full h-9 p-2 border bg-gray-100 border-gray-400 rounded-sm focus:outline focus:outline-primary-600/50 focus:ring focus:ring-primary-600/50 focus:border-primary-600/50"
            required
          />
        </div>
        <div class="mb-4">
          <label for="attendee-age" class="block mb-0 font-semibold">
            Attendee Age
          </label>
          <input
            type="number"
            id="attendee-age"
            name="attendee-age"
            min="14"
            max="18"
            placeholder="14-18"
            class="w-full h-9 p-2 border bg-gray-100 border-gray-400 rounded-sm focus:outline focus:outline-primary-600/50 focus:ring focus:ring-primary-600/50 focus:border-primary-600/50"
            required
          />
        </div>
      </div>
      <div class="bg-primary-300 mt-8 rounded-md p-6">
        <h4 class="text-center font-semibold text-2xl mb-6">
          Parent or Legal Guardian Information
        </h4>
        <div class="mb-4">
          <label for="first-name" class="block mb-0 font-semibold">
            First Name
          </label>
          <input
            type="text"
            id="first-name"
            name="first-name"
            autocomplete="given-name"
            class="w-full h-9 p-2 border bg-gray-100 border-gray-400 rounded-sm focus:outline focus:outline-primary-600/50 focus:ring focus:ring-primary-600/50 focus:border-primary-600/50"
            required
          />
        </div>
        <div class="mb-4">
          <label for="last-name" class="block mb-0 font-semibold">
            Last Name
          </label>
          <input
            type="text"
            id="last-name"
            name="last-name"
            autocomplete="family-name"
            class="w-full h-9 p-2 border bg-gray-100 border-gray-400 rounded-sm focus:outline focus:outline-primary-600/50 focus:ring focus:ring-primary-600/50 focus:border-primary-600/50"
            required
          />
        </div>
        <div class="mb-4">
          <label for="phone" class="block mb-0 font-semibold"> Phone </label>
          <input
            type="text"
            id="phone"
            name="phone"
            autocomplete="tel"
            class="w-full h-9 p-2 border bg-gray-100 border-gray-400 rounded-sm focus:outline focus:outline-primary-600/50 focus:ring focus:ring-primary-600/50 focus:border-primary-600/50"
            required
          />
        </div>
        <div class="mb-4">
          <label for="email" class="block mb-0 font-semibold"> Email </label>
          <input
            type="email"
            id="email"
            name="email"
            autocomplete="email"
            class="w-full h-9 p-2 border bg-gray-100 border-gray-400 rounded-sm focus:outline focus:outline-primary-600/50 focus:ring focus:ring-primary-600/50 focus:border-primary-600/50"
            required
          />
        </div>
        <div class="mb-4">
          <label for="interes-program" class="block mb-0 font-semibold"
            >Which experience aviation program are you interested in?</label
          >
          <select
            required
            id="interes-program"
            name="interes-program"
            class="w-full h-9 p-2 border bg-gray-100 border-gray-400 rounded-sm focus:outline focus:outline-primary-600/50 focus:ring focus:ring-primary-600/50 focus:border-primary-600/50"
          >
            {
              options.map((program) => (
                <option>
                  {program.title + " - " + program.descriptions[0]}
                </option>
              ))
            }
          </select>
        </div>

        <p class="hidden">
          <label>
            Don't fill this out if you're human:
            <input name="confirm-email" />
          </label>
        </p>
      </div>
      <div class="mt-8 px-3 lg:px-0">
        <input
          type="checkbox"
          name="agree-data-collection"
          id="agree-data-collection"
          class="mr-2 size-6 lg:size-5"
        />

        <label
          for="agree-data-collection"
          class="text-gray-800 text-sm lg:text-base"
          set:html={data.checkboxText}
        />
      </div>
      <button
        id="submit-button"
        form="contact-form"
        disabled
        type="submit"
        class="mx-auto mt-8 btn-primary cursor-not-allowed bg-gray-400 hover:bg-gray-400 hover:text-white"
      >
        Send Message
      </button>
    </form>
  </div>
</section>
<script define:vars={{ GHL_CONTACT_FORM_WEBHOOK_URL }}>
  const checkbox = document.getElementById("agree-data-collection");
  const submitButton = document.getElementById("submit-button");

  checkbox.addEventListener("change", function () {
    if (checkbox.checked) {
      submitButton.disabled = false;
      submitButton.classList.remove(
        "cursor-not-allowed",
        "bg-gray-400",
        "hover:bg-gray-400"
      );
    } else {
      submitButton.disabled = true;
      submitButton.classList.add(
        "cursor-not-allowed",
        "bg-gray-400",
        "hover:bg-gray-400"
      );
    }
  });

  // Wait for the DOM content to be fully loaded
  document.addEventListener("DOMContentLoaded", function () {
    // Get the contactUs form element
    const contactForm = document.getElementById("contact-form");

    // Check if the contactUs form element exists
    if (contactForm !== null) {
      // Add submit event listener to the contactUs form
      contactForm.addEventListener("submit", function (event) {
        // Prevent the default form submission
        event.preventDefault();

        // Serialize the form data
        const formData = new FormData(contactForm);

        // Check the value of the honeypot field
        const confirmEmailValue = formData.get("confirm-email");
        if (confirmEmailValue === "" || confirmEmailValue === null) {
          // If the honeypot field is empty, it's a human
          // Set the form action to the URL for processing the form and redirecting to thank you
          contactForm.action = GHL_CONTACT_FORM_WEBHOOK_URL;
        }

        // Convert FormData to URLSearchParams
        const urlSearchParams = new URLSearchParams();
        for (const pair of formData.entries()) {
          urlSearchParams.append(pair[0], pair[1]);
        }

        // Send an AJAX request to submit the form
        const xhr = new XMLHttpRequest();
        xhr.open("POST", contactForm.action);
        xhr.setRequestHeader(
          "Content-Type",
          "application/x-www-form-urlencoded"
        );
        xhr.onload = function () {
          // Check if the request was successful (status 200)
          if (xhr.status === 200) {
            // Redirect the user after a successful form submission
            window.location.href = "/contact-confirmation";
          } else {
            // Handle errors if any
            console.error("Form submission failed:", xhr.statusText);
          }
        };
        xhr.onerror = function () {
          // Handle network errors
          console.error("Network error occurred while submitting the form.");
        };
        xhr.send(urlSearchParams);
      });
    } else {
      console.error("Discovery Flight form element not found.");
    }
  });
</script>

<script src="../scripts/emailValidation.js"></script>
