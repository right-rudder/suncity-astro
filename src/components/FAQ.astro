---
interface FAQItem {
  question: string;
  answer: string;
}

interface Props {
  title?: string;
  items: FAQItem[];
  className?: string;
}

const {
  title = "Frequently Asked Questions",
  items,
  className = "",
} = Astro.props;

// Generate FAQ structured data
const faqSchema = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  mainEntity: items.map((item) => ({
    "@type": "Question",
    name: item.question,
    acceptedAnswer: {
      "@type": "Answer",
      text: item.answer,
    },
  })),
};

const faqLD = JSON.stringify(faqSchema);
---

<section class={`py-12 lg:py-24 ${className}`} aria-labelledby="faq-heading">
  <div class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
    <div class="text-center">
      <h2
        id="faq-heading"
        class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl lg:text-5xl"
      >
        {title}
      </h2>
      <p class="mt-4 text-lg text-gray-600">
        Get answers to the most common questions about flight training.
      </p>
    </div>

    <div
      class="mt-12 space-y-6"
      itemscope
      itemtype="https://schema.org/FAQPage"
    >
      {
        items.map((item, index) => (
          <div
            class="border border-gray-200 rounded-lg overflow-hidden"
            itemscope
            itemtype="https://schema.org/Question"
          >
            <button
              class="w-full px-6 py-4 text-left bg-white hover:bg-gray-50 focus:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-inset transition-colors"
              aria-expanded="false"
              aria-controls={`faq-answer-${index}`}
              data-faq-toggle
            >
              <div class="flex justify-between items-center">
                <h3
                  class="text-lg font-semibold text-gray-900 pr-4"
                  itemprop="name"
                >
                  {item.question}
                </h3>
                <svg
                  class="h-5 w-5 text-gray-500 transition-transform duration-200"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  aria-hidden="true"
                  data-faq-icon
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M19 9l-7 7-7-7"
                  />
                </svg>
              </div>
            </button>

            <div
              id={`faq-answer-${index}`}
              class="hidden px-6 pb-6"
              itemscope
              itemtype="https://schema.org/Answer"
              data-faq-content
            >
              <div
                class="text-gray-700 leading-relaxed"
                itemprop="text"
                set:html={item.answer}
              />
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>

<!-- FAQ Structured Data -->
<script type="application/ld+json" set:html={faqLD} />

<!-- FAQ JavaScript for Accessibility -->
<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    const toggles = document.querySelectorAll("[data-faq-toggle]");

    toggles.forEach((toggle) => {
      toggle.addEventListener("click", function () {
        const content = this.nextElementSibling;
        const icon = this.querySelector("[data-faq-icon]");
        const isExpanded = this.getAttribute("aria-expanded") === "true";

        // Close all other FAQs
        toggles.forEach((otherToggle) => {
          if (otherToggle !== this) {
            otherToggle.setAttribute("aria-expanded", "false");
            const otherContent = otherToggle.nextElementSibling;
            const otherIcon = otherToggle.querySelector("[data-faq-icon]");
            if (otherContent) otherContent.classList.add("hidden");
            if (otherIcon) otherIcon.style.transform = "rotate(0deg)";
          }
        });

        // Toggle current FAQ
        if (isExpanded) {
          this.setAttribute("aria-expanded", "false");
          if (content) content.classList.add("hidden");
          if (icon) icon.style.transform = "rotate(0deg)";
        } else {
          this.setAttribute("aria-expanded", "true");
          if (content) content.classList.remove("hidden");
          if (icon) icon.style.transform = "rotate(180deg)";
        }
      });

      // Handle keyboard navigation
      toggle.addEventListener("keydown", function (e) {
        if (e.key === "Enter" || e.key === " ") {
          e.preventDefault();
          this.click();
        }
      });
    });
  });
</script>

<style>
  /* Smooth transitions for FAQ content */
  [data-faq-content] {
    transition: all 0.3s ease-in-out;
  }

  /* Focus styles for better accessibility */
  [data-faq-toggle]:focus {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }
</style>
