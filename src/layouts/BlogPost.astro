---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import BaseLayout from "./BaseLayout.astro";
import {
  KEYWORDS,
  SITE_TITLE,
  OG_IMAGE,
  PHONE_NUMBER,
  EMAIL_ADDRESS,
  ADDRESS_LINE_1,
  ADDRESS_LINE_2,
} from "../consts";
import CTAColor from "../components/CTAColor.astro";
import flyWithUsCTA from "../data/flyWithUsCTA";

type Props = CollectionEntry<"blog">["data"];

const {
  title,
  author,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  tags,
  keywords,
} = Astro.props;

const siteURL = Astro.site
  ? Astro.site.toString()
  : "https://suncityaviation.com";
const authorName = author || "Sun City Aviation Academy Team";
const heroImageURL = heroImage
  ? new URL(heroImage, siteURL).toString()
  : new URL(OG_IMAGE, siteURL).toString();
const logoURL = new URL("/sun-city-white-text-logo.webp", siteURL).toString();
const pageKeywords = (category ? [category] : [])
  .concat(tags || [])
  .concat(keywords || [])
  .join(", ");
---

<BaseLayout
  siteTitle={title + " | Blog | Sun City Aviation Academy"}
  siteDescription={description}
  keywords={pageKeywords}
  ogImage={heroImage}
>
  <div class="h-20 lg:h-28 w-full bg-primary-950/80"></div>

  <script
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Article",
      mainEntityOfPage: {
        "@type": "WebPage",
        "@id": Astro.url.toString(),
      },
      headline: title,
      description: description,
      image: heroImageURL,
      author: {
        "@type": "Organization",
        name: authorName,
        url: siteURL,
      },
      publisher: {
        "@type": "Organization",
        name: "Sun City Aviation Academy",
        logo: {
          "@type": "ImageObject",
          url: logoURL,
        },
        telephone: PHONE_NUMBER,
        email: EMAIL_ADDRESS,
        address: {
          "@type": "PostalAddress",
          streetAddress: ADDRESS_LINE_1,
          addressLocality: "Pembroke Pines",
          addressRegion: "FL",
          postalCode: ADDRESS_LINE_2.split(" ").pop(),
          addressCountry: "US",
        },
      },
      datePublished: pubDate.toISOString(),
      dateModified: updatedDate
        ? updatedDate.toISOString()
        : pubDate.toISOString(),
      keywords: pageKeywords,
    })}
  />

  <section
    class="flex justify-center pt-2 bg-gradient-to-b from-primary-50 to-primary-100 overflow-hidden"
  >
    <article class="mx-auto max-w-4xl">
      <div
        class="mb-12 lg:mb-0 aspect-square lg:aspect-video lg:rounded-t-md shadow-md overflow-hidden"
      >
        {
          heroImage && (
            <img
              class="object-cover h-full w-full bg-white"
              src={heroImage}
              alt={`Sun City Aviation Academy Blog - ${title}`}
            />
          )
        }
      </div>
      <div
        class="mx-auto max-w-4xl bg-white prose font-sans pt-12 pb-32 px-5 overflow-hidden"
      >
        <div class="title">
          <div class="date">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <h1 class="text-4xl md:text-5xl m-0 font-sans">{title}</h1>
          <p class="text-sm font-light">Published by:</p>
          <p class="-mt-5 text-base font-medium">{author}</p>
          <div class="flex flex-wrap justify-center md:justify-start gap-2">
            <span
              class="bg-primary-600 text-white text-xs leading-3 md:text-sm px-3 py-1 rounded-md capitalize"
            >
              {category}
            </span>
            {
              tags
                .slice(0, 3)
                .map((tag, index) => (
                  <span
                    class={`bg-teal-500 text-white text-xs leading-3 md:text-sm px-3 py-1 rounded-md capitalize`}
                  >
                    {tag}
                  </span>
                ))
            }
          </div>
          <hr />
        </div>
        <div class="flex relative justify-center">
          <slot />
        </div>
      </div>
    </article>
  </section>
  <CTAColor content={flyWithUsCTA} />
</BaseLayout>
